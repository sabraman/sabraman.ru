---
description: 
globs: 
alwaysApply: false
---
# Coding Conventions

Follow these standards when writing code for this project:

## Components
- Place new components in the `src/components` directory
- Create reusable UI components in `src/components/ui` 
- Use named exports for components
- Follow a Props interface pattern at the top of component files

## TypeScript
- Use explicit typing rather than relying on inference
- Prefer type aliases over interfaces for component props
- Use Zod for runtime validation of external data
- Export types generated from Zod schemas

## State Management
- Use Zustand for global state that needs to be shared across multiple components
- Keep state as local as possible using React's built-in hooks
- Use React Query for all API data fetching

## Styling
- Use Tailwind classes directly in components
- Follow the Braun design system guidelines from `design.md`
- Use CSS variables for theme values
- Maintain consistent spacing using the defined spacing scale

## File Structure
- Keep files focused on a single responsibility
- Group related files in feature-specific directories
- Use index files for cleaner imports
- Place utility functions in `src/lib`
